(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{266:function(e,t,a){"use strict";a.r(t);var n=a(0),o=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"zoe-roadmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zoe-roadmap"}},[e._v("#")]),e._v(" Zoe Roadmap")]),e._v(" "),a("Zoe-Version"),e._v(" "),a("p",[e._v("Here's a number of features that we are planning to add in the near\nfuture to Zoe, in response to user feedback.")]),e._v(" "),a("ol",[a("li",[e._v("Support \"multiples\" in proposals. Multiples are a\nway of expressing partial fulfillment of offers without having to\ndeal with the problem of division. For instance, we may want to buy\n100 shares of stock for 10 dollars each, and if we can't buy 100\nshares, we're happy with as much as we can get. We want to be able\nto encode this kind of offer more succinctly than having to make\n100 separate offers.")]),e._v(" "),a("li",[e._v('Support "disjuncts" in proposals. By disjuncts, we mean allowing\ncompound offers in which we want exactly one of them to be\naccepted. For instance, we might want to find a good weekend\nactivity and we\'re ok with buying a ticket to the museum or the\nconcert, but not both because they will happen at the same time.')]),e._v(" "),a("li",[e._v("Separate Zoe into two layers. One layer, doing the escrowing and\nactually holding the assets, is in a different Vat than the other\nlayer, which runs a contract instance.")])])],1)}),[],!1,null,null,null);t.default=o.exports}}]);