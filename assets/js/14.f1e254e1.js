(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{216:function(e,t,a){"use strict";a.r(t);var n=a(0),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"distributed-programming-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#distributed-programming-in-javascript"}},[e._v("#")]),e._v(" Distributed programming in JavaScript")]),e._v(" "),a("p",[e._v("Agoric's platform is built mainly in JavaScript and enables authors to write secure smart contracts in JavaScript.")]),e._v(" "),a("p",[e._v("For the biggest part, all JavaScript knowledge is directly applicable to the Agoric platform. However, there are a couple of Agoric-specific additions at various layers that are better to understand before programming on the Agoric platform.")]),e._v(" "),a("p",[e._v("Some specificities are "),a("strong",[e._v("concepts")]),e._v(", other are at the "),a("strong",[e._v("syntax level")]),e._v(", others are "),a("strong",[e._v("Agoric library additions")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"vats"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vats"}},[e._v("#")]),e._v(" Vats")]),e._v(" "),a("p",[e._v("A vat is a "),a("em",[e._v("unit of synchrony")]),e._v(". This means that within a JavaScript vat, objects\nand functions can communicate with one another synchronously. It also means that\ncommunication with objects outside the vat can be done, but it requires\n"),a("a",{attrs:{href:"#Communicating-with-remote-objects-via-E"}},[e._v("managing asynchronous messages and responses")]),e._v(".")]),e._v(" "),a("p",[e._v("A vat runs a single "),a("em",[e._v("event loop")]),e._v(".")]),e._v(" "),a("p",[e._v("A physical machine can run one or several vats. A blockchain can run one or several communicating vats.")]),e._v(" "),a("p",[e._v("Different vats can communicate by sending asynchronous messages to other vats.")]),e._v(" "),a("p",[e._v("A vat is the moral equivalent of a Unix Process.")]),e._v(" "),a("p",[e._v("The internal state of a vat can be stored in persistent memory so that the vat\ncan be turned off and later turned back on (on the same or a different physical\nmachine) by loading the stored state.")]),e._v(" "),a("p",[e._v("In cosmic-swingset, several vats are started. Each vat hosts a service (registrar, zoe, etc.). Currently (April, 2020), all contracts run in the Zoe vat, but eventually, each contract will run in its own dedicated vat.")]),e._v(" "),a("h2",{attrs:{id:"secure-ecmascript-ses"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#secure-ecmascript-ses"}},[e._v("#")]),e._v(" Secure EcmaScript (SES)")]),e._v(" "),a("p",[e._v("SES is a standards-track extension of\n"),a("a",{attrs:{href:"https://www.ecma-international.org/publications/standards/Ecma-262.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("EcmaScript"),a("OutboundLink")],1),e._v(",\nthe JavaScript standard - common to web browsers, Node.js, and embedded\ndevices. SES provides a secure platform for executing programs, which means that\nit's possible to run code you don't completely trust, without being vulnerable\nto its bugs or bad intentions. The guest code runs in an immutable realm that has no\naccess to ambient authority by default. The hosting code can provide access to\ndisk or network or other services, and any authority not granted is inaccessible\nto the guest code.")]),e._v(" "),a("p",[e._v("SES can be enabled via the "),a("a",{attrs:{href:"https://www.npmjs.com/package/@agoric/harden",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("ses")]),e._v(" package"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("lockdown"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"ses"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n \n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("lockdown")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// turns the current realm into an immutable realm")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// calling this function also adds a global Compartment constructor to create compartments")]),e._v("\n")])])]),a("h3",{attrs:{id:"compartments-and-realms"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compartments-and-realms"}},[e._v("#")]),e._v(" Compartments and realms")]),e._v(" "),a("p",[e._v("JavaScript code runs in the context of a "),a("a",{attrs:{href:"https://www.ecma-international.org/ecma-262/10.0/index.html#sec-code-realms",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Realm")]),a("OutboundLink")],1),e._v(". A realm is composed of the set of "),a("em",[e._v("primordials")]),e._v(" (objects and functions of the standard library like "),a("code",[e._v("Array.prototype.push")]),e._v(") and of a global object. In a web browser, an iframe is a realm. In Node.js, a Node process is a realm.")]),e._v(" "),a("p",[e._v("For historical reasons, the ECMAScript specification requires the "),a("em",[e._v("primordials")]),e._v("\nto be mutable ("),a("code",[e._v("Array.prototype.push = yourFunction")]),e._v(" is valid ECMAScript but not\nrecommended). SES makes it possible to turn the current realm into an\n"),a("strong",[e._v("immutable realm")]),e._v(", that is a realm within which the primordials are deeply\nfrozen. It also allows programs to create "),a("strong",[e._v("Compartments")]),e._v(".")]),e._v(" "),a("p",[e._v('Compartments are "mini-realms". They have their own dedicated global object and environment, but they inherit the primordials from their parent realm.')]),e._v(" "),a("p",[e._v('Agoric "deploy scripts" and smart contract code run in an immutable realm with compartments providing just enough authority to create useful and secure contracts (but not enough authority to do anything unintended or harmful to the participants of the smart contract)')]),e._v(" "),a("h3",{attrs:{id:"harden"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#harden"}},[e._v("#")]),e._v(" harden")]),e._v(" "),a("p",[a("code",[e._v("harden")]),e._v(" is a function provided by the\n"),a("a",{attrs:{href:"https://www.npmjs.com/package/@agoric/harden",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("@agoric/harden")]),e._v(" package"),a("OutboundLink")],1),e._v(".  It ensures\nthat external callers of hardened objects can only interact with them through\nfunctions present in their API.  "),a("code",[e._v("harden")]),e._v(" does a transitive version of\n"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Object.freeze")]),a("OutboundLink")],1),e._v(",\nwhich only locks up an object's own properties.")]),e._v(" "),a("p",[e._v("All objects that will be transferred across a trust boundary must have their API\nsurface frozen (usually by calling harden). This ensures that other objects can only\ninteract with them through their defined method interface. CapTP, our communications\nlayer for passing references to distributed objects, enforces this at vat boundaries.")]),e._v(" "),a("p",[e._v("After you've "),a("a",{attrs:{href:"https://docs.npmjs.com/cli/install",target:"_blank",rel:"noopener noreferrer"}},[e._v("installed"),a("OutboundLink")],1),e._v(" the "),a("a",{attrs:{href:"https://www.npmjs.com/package/@agoric/harden",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("@agoric/harden")]),e._v(" package"),a("OutboundLink")],1),e._v(", you can use it this way:")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" harden "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'@agoric/harden'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("a  "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 12 because o is still mutable")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("harden")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("a  "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("37")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// throws a TypeError because o is now hardened")]),e._v("\n")])])]),a("h3",{attrs:{id:"communicating-with-remote-objects-using-e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#communicating-with-remote-objects-using-e"}},[e._v("#")]),e._v(" Communicating with remote objects using "),a("code",[e._v("E")])]),e._v(" "),a("p",[e._v("On the Agoric platform, objects may be running in distinct vats, or on a remote\nmachine, or even on a blockchain. Whenever you send messages to an object that\nisn't accessible locally in the same vat, the response can't be received\nimmediately and can't be acted upon locally until the response comes back. In\norder to ensure that local code isn't blocked while waiting for the response, we\nreturn a Promise for the result. You can send further messages to the result of\nthat promise, and if the promise resolves to a remote object the message will be\nforwarded to its location, and the result will eventually be returned and\nprocessed locally.")]),e._v(" "),a("p",[e._v("JavaScript\n"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises",target:"_blank",rel:"noopener noreferrer"}},[e._v("supports Promises"),a("OutboundLink")],1),e._v("\nnatively, and Agoric's HandledPromises are compatible and interoperable with\nstandard Promises. The standard way to interact with a Promise is to do further\nprocessing either in a "),a("code",[e._v(".then()")]),e._v(" clause or after using "),a("code",[e._v("await")]),e._v(" to get the\nresult, and that works the same way with HandledPromises.")]),e._v(" "),a("p",[e._v("You can send messages to the eventual result of a Promise, or to a presence (a\nproxy for a remote object), using the "),a("code",[e._v("E")]),e._v("\nnotation. "),a("code",[e._v("E(remoteServiceP).startup(params)")]),e._v(". Since the result of a send\nusing"),a("code",[e._v("E")]),e._v(" will always be a Promise, the normal thing to do with the result (as\nwith any object) is either pass it as a parameter or invoke a function to be\nperformed once the Promise is fulfilled.")]),e._v(" "),a("p",[a("code",[e._v("E(remoteServiceP).startup(params).then(result => useTheService(result);")])]),e._v(" "),a("p",[e._v("Deploy scripts and Zoe smart contracts may need to access services that run in a\ndifferent vat. For instance, a deploy script may want to install a contract in a\nZoe instance running in a blockchain. For this to happen, the deploy script\ncannot call "),a("code",[e._v("zoe.install(code, moduleFormat)")]),e._v(", because it does not have local\naccess to the "),a("code",[e._v("zoe")]),e._v(" object which is in a different vat. However, the deploy\nscript is given access to a "),a("code",[e._v("zoe")]),e._v(" "),a("em",[e._v("presence")]),e._v(". In order to call methods on the\nactual Zoe object, the deploy code can do:")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" installationHandle "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("await")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[e._v("E")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("zoe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" moduleFormat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("The "),a("code",[e._v("E")]),e._v(' function is a local "bridge" that makes is possible to invoke methods on\nremote object. The local version of a remote object is called a\n'),a("strong",[e._v("presence")]),e._v(". "),a("code",[e._v("E")]),e._v(" takes a presence as an argument and creates an object with the\ncorresponding methods. It performs the communication asynchronously. Method\ncalls can take arguments that are objects in the current vat or presences for\nobjects in other vats.")])])}),[],!1,null,null,null);t.default=s.exports}}]);